{"version":3,"sources":["EmotionTable.js","App.js","reportWebVitals.js","index.js"],"names":["EmotionTable","state","eventList","this","setState","props","emotions","li_ctr","className","map","eventDetails","style","flex","scope","React","Component","App","innercomp","rows","cols","id","mode","sentimentOutput","sentiment","renderTextArea","document","getElementById","value","renderTextBox","sendForSentimentAnalysis","url","axios","get","then","response","data","output","color","fontSize","sendForEmotionAnalysis","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b7ab34e5.chunk.js","sourcesContent":["import React from 'react';\nimport './bootstrap.min.css';\n\nclass EmotionTable extends React.Component {\n    state = { eventList: [] }\n\n    componentDidMount() {\n        this.setState({ eventList: this.props.emotions});\n    }\n\n    render() {\n        let li_ctr = 0;\n        return (\n            <div>\n                {/*You can remove this line and the line below. */}\n                <table className=\"table table-bordered\">\n                    <tbody>\n\n                        {this.state.eventList.map(function (eventDetails) {\n                            return (\n                                <tr>\n                                    <th style={{ flex: 1 }} scope=\"col\" key={li_ctr++}>{eventDetails[0]}</th>\n                                    <th style={{ flex: 1 }} scope=\"col\" key={li_ctr++}>{eventDetails[1]}</th>\n                                </tr>\n                            );\n                        })}\n\n                    </tbody>\n                </table>\n            </div >\n        );\n    }\n\n}\nexport default EmotionTable;\n","import './bootstrap.min.css';\nimport './App.css';\nimport EmotionTable from './EmotionTable.js';\nimport React from 'react';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  state = {innercomp:<textarea rows=\"4\" cols=\"50\" id=\"textinput\"/>,\n            mode: \"text\",\n          sentimentOutput:[],\n          sentiment:true\n        }\n  \n  renderTextArea = ()=>{\n    document.getElementById(\"textinput\").value = \"\";\n    if(this.state.mode === \"url\") {\n      this.setState({innercomp:<textarea rows=\"4\" cols=\"50\" id=\"textinput\"/>,\n      mode: \"text\",\n      sentimentOutput:[],\n      sentiment:true\n    })\n    } \n  }\n\n  renderTextBox = ()=>{\n    document.getElementById(\"textinput\").value = \"\";\n    if(this.state.mode === \"text\") {\n      this.setState({innercomp:<textarea rows=\"1\" cols=\"50\" id=\"textinput\"/>,\n      mode: \"url\",\n      sentimentOutput:[],\n      sentiment:true\n    })\n    }\n  }\n\n  sendForSentimentAnalysis = () => {\n    this.setState({sentiment:true});\n    let ret = \"\";\n    let url = \".\";\n\n    if(this.state.mode === \"url\") {\n      url = url+\"/url/sentiment?url=\"+document.getElementById(\"textinput\").value;\n    } else {\n      url = url+\"/text/sentiment?text=\"+document.getElementById(\"textinput\").value;\n    }\n    ret = axios.get(url);\n    ret.then((response)=>{\n\n      //Include code here to check the sentiment and fomrat the data accordingly\n\n      this.setState({sentimentOutput:response.data});\n      let output = response.data;\n      if(response.data === \"positive\") {\n        output = <div style={{color:\"green\",fontSize:20}}>{response.data}</div>\n      } else if (response.data === \"negative\"){\n        output = <div style={{color:\"red\",fontSize:20}}>{response.data}</div>\n      } else {\n        output = <div style={{color:\"yellow\",fontSize:20}}>{response.data}</div>\n      }\n      this.setState({sentimentOutput:output});\n    });\n  }\n\n  sendForEmotionAnalysis = () => {\n    this.setState({sentiment:false});\n    let ret = \"\";\n    let url = \".\";\n    if(this.state.mode === \"url\") {\n      url = url+\"/url/emotion?url=\"+document.getElementById(\"textinput\").value;\n    } else {\n      url = url+\"/text/emotion/?text=\"+document.getElementById(\"textinput\").value;\n    }\n    ret = axios.get(url);\n\n    ret.then((response)=>{\n      this.setState({sentimentOutput:<EmotionTable emotions={response.data}/>});\n  });\n  }\n  \n\n  render() {\n    return (  \n      <div className=\"App\">\n      <button className=\"btn btn-info\" onClick={this.renderTextArea}>Text</button>\n        <button className=\"btn btn-dark\"  onClick={this.renderTextBox}>URL</button>\n        <br/><br/>\n        {this.state.innercomp}\n        <br/>\n        <button className=\"btn-primary\" onClick={this.sendForSentimentAnalysis}>Analyze Sentiment</button>\n        <button className=\"btn-primary\" onClick={this.sendForEmotionAnalysis}>Analyze Emotion</button>\n        <br/>\n            {this.state.sentimentOutput}\n      </div>\n    );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}